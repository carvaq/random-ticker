apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'
apply plugin: 'com.cookpad.android.licensetools'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'

apply from: 'release_config.gradle'

def getGitVersionName = { ->
	String tag = ("git describe --abbrev=0 --tags").execute().text.trim()
	if (tag.contains('/') && tag.contains('.')) {
		return tag.substring(tag.indexOf('/') + 1, tag.length())
	} else {
		throw new Exception("tag has no slashes or a period [${tag}]")
	}
}

def parseVersionCode = {
	String versionName = gitVersionName
	def versionCodeParts = versionName.tokenize('.')
	int decimals = Integer.parseInt(versionCodeParts.get(1))
	String formattedVersionCode = String.format("%s%02d00", versionCodeParts.get(0), decimals)
	def versionCode = Integer.parseInt(formattedVersionCode)
	println "Version name: ${versionName}  Version code: ${versionCode}"
	return versionCode
}

ext {
	gitVersionName = getGitVersionName()
	gitVersionCode = parseVersionCode(gitVersionName)
}

kapt {
	generateStubs = false
}

android {
	compileSdkVersion 27
	buildToolsVersion '27.0.3'
	defaultConfig {
		applicationId "com.cvv.fanstaticapps.randomticker"
		minSdkVersion 21
		targetSdkVersion 27
		versionCode gitVersionCode
		versionName gitVersionName
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
	}
	buildTypes {
		release {
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.release
		}
	}

	testOptions {
		unitTests {
			includeAndroidResources = true
		}
	}
}

def daggerVersion = '2.13'
def androidSupportVersion = '27.1.1'

dependencies {
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
	implementation "com.android.support:design:${androidSupportVersion}"
	implementation "com.android.support:cardview-v7:${androidSupportVersion}"
	implementation "com.android.support:support-v4:${androidSupportVersion}"
	implementation "com.android.support:appcompat-v7:27.1.1"
	implementation 'pl.bclogic:pulsator4droid:1.0.3'
	implementation 'com.github.kobakei.grenade:library:1.1.0'
	implementation "com.google.dagger:dagger:$daggerVersion"
	implementation "com.google.dagger:dagger-android:$daggerVersion"
	implementation "com.google.dagger:dagger-android-support:$daggerVersion"
	implementation 'com.crashlytics.sdk.android:crashlytics:2.9.3'
	implementation 'com.google.firebase:firebase-crash:16.0.0'
	implementation 'com.google.firebase:firebase-core:16.0.0'
	implementation 'com.android.support.constraint:constraint-layout:1.1.0'

	kapt "com.google.dagger:dagger-compiler:$daggerVersion"
	kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
	kapt 'com.github.kobakei.grenade:processor:1.1.0'

	testImplementation 'org.mockito:mockito-core:2.13.0'
	testImplementation 'junit:junit:4.12'
	testImplementation 'org.robolectric:robolectric:3.6.1'
	testImplementation "com.nhaarman:mockito-kotlin-kt1.1:1.5.0"

	androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
	androidTestImplementation 'com.android.support.test:rules:1.0.2'
	androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}