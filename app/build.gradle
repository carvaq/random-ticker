apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.oss.licenses.plugin'
apply plugin: 'com.github.triplet.play'
apply plugin: 'io.fabric'

apply from: 'release_config.gradle'

def getGitVersionName = { ->
	String tag = ("git describe --abbrev=0 --tags").execute().text.trim()
	if (tag.contains('/') && tag.contains('.')) {
		return tag.substring(tag.indexOf('/') + 1, tag.length())
	} else {
		throw new Exception("tag has no slashes or a period [${tag}]")
	}
}

def parseVersionCode = {
	String versionName = gitVersionName
	def versionCodeParts = versionName.tokenize('.')
	int decimals = Integer.parseInt(versionCodeParts.get(1))
	String formattedVersionCode = String.format("%s%02d00", versionCodeParts.get(0), decimals)
	def versionCode = Integer.parseInt(formattedVersionCode)
	println "Version name: ${versionName}  Version code: ${versionCode}"
	return versionCode
}

	ext	{
			gitVersionName = getGitVersionName()
			gitVersionCode = parseVersionCode(gitVersionName)
		}

android {
	compileSdkVersion maxSdk

	defaultConfig {
		applicationId "com.cvv.fanstaticapps.randomticker"
		minSdkVersion minSdk
		targetSdkVersion maxSdk
		versionCode gitVersionCode
		versionName gitVersionName

		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
	}
	buildTypes {
		release {
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.release
		}
	}
}

dependencies {
	implementation project(':base-feature')
}

apply plugin: 'com.google.gms.google-services'